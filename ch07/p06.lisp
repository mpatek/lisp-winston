; Define DATA-ENTRY, a procedure that prints and reads according to formatting instructions.
(DEFUN DATA-ENTRY (INSTR-LIST)
       (DATA-ENTRY-AUX INSTR-LIST 1 0))
(DEFUN DATA-ENTRY-AUX (INSTR-LIST ROW COL)
       (COND ((NULL INSTR-LIST) T)
             (T (LET ((RESULT (CONSUME-INSTR (CAR INSTR-LIST) ROW COL)))
                     ;(PRINT RESULT)
                     (DATA-ENTRY-AUX (CDR INSTR-LIST) (CAR RESULT) (CADR RESULT))))))
(DEFUN CONSUME-INSTR (INSTR ROW COL)
       (LET ((NEW-ROW (CADR INSTR)) (NEW-COL (CADDR INSTR)))
            (PRINT-NEWLINES (- NEW-ROW ROW))
            (COND ((> 0 (- NEW-ROW ROW)) (SETQ COL 0)))
            (PRINT-SPACES (- NEW-COL COL))
            (COND ((LISTP (CAR INSTR)) 
                   (PRINT-PROMPT (CAR INSTR)) 
                   (SETQ COL (+ (PROMPT-LEN (CAR INSTR)) COL)))
                  (T 
                    (COLLECT-INPUT (CAR INSTR))
                    (SETQ COL (+ (LENGTH (SYMBOL-NAME (EVAL (CAR INSTR)))) COL))))
            ;(PRINT (LIST ROW '-> NEW-ROW))
            ;(PRINT (LIST COL '-> NEW-COL))
            (LIST NEW-ROW NEW-COL)))
(DEFUN PRINT-PROMPT (P)
       ;(PRINT 'PROMPTHERE)
       ;(PRINT (CAR P))
       (COND ((NULL P) T)
             ((NULL (CDR P)) (PRINC (CAR P)))
             (T (PRINC (CAR P)) (PRINC '| |) (PRINT-PROMPT (CDR P)))))
(DEFUN PROMPT-LEN (P)
       ;(PRINT 'PROMPLEN)
       (COND ((NULL P) 0)
             ((NULL (CDR P)) (LENGTH (SYMBOL-NAME (CAR P))))
             (T (+ (+ 1 (LENGTH (SYMBOL-NAME (CAR P))) (PROMPT-LEN (CDR P)))))))
(DEFUN PRINT-NEWLINES (N)
       ;(PRINT 'NEWLINES)
       (COND ((<= N 0) T)
             (T (TERPRI) (PRINT-NEWLINES (- N 1)))))
(DEFUN PRINT-SPACES (N)
       ;(PRINT 'SPACES)
       ;(PRINT N)
       (COND ((<= N 0) T)
             (T (PRINC '|.|) (PRINT-SPACES (- N 1)))))
(DEFUN COLLECT-INPUT (VAR)
       (PROCLAIM (LIST 'SPECIAL VAR))
       (SET VAR (READ)))
